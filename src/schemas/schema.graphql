type Query {
  users: [User!]
  chats: [Chat!]
  messages: [Message!]
}

type Mutation {
  createChat(data: CreateChatInput): Chat!
  createUser(data: CreateUserInput): User!
  createMessage(data: CreateMessageInput): Message!
}

# type Subscription {

# }

type Chat {
  id: ID!
  participants: [User!]
  messages: [Message!]
  createdAt: String!
}

type Message {
  id: ID!
  sender: User!
  text: String!
  createdAt: String!
}

type User {
  id: ID!
  name: String!
  phone: String!
  image: String!
  chats: [Chat!]
}

input CreateChatInput {
  participants: [String!]!
}

input CreateUserInput {
  name: String!
  phone: String!
  image: String!
}

input CreateMessageInput {
  sender: String!
  text: String!
  chat: String!
}
